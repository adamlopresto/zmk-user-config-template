#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    behaviors {
        shift_dance: shift_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_DANCE";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&caps_word>;
        };

        kt_off: key_toggle_off_only {
            compatible = "zmk,behavior-key-toggle";
            #binding-cells = <1>;
            display-name = "Key Toggle Off";
            toggle-mode = "off";
        };

        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold for mo, tap for toggle";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        trans_0: trans_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&trans &to 0>;
            label = "TRANS_0";
        };

        select_word_left: select_word_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT) &kp LS(LC(LEFT)) &tog 3>;
            label = "SELECT_WORD_LEFT";
        };

        select_word_right: select_word_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LEFT) &kp LS(LC(RIGHT)) &tog 3>;
            label = "SELECT_WORD_RIGHT";
        };

        select_line_down: select_line_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp HOME &kp LS(END) &tog 3>;
            label = "SELECT_LINE";
        };

        select_line_up: select_line_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp END &kp LS(HOME) &kp LS(HOME) &tog 3>;
            label = "SELECT_LINE_UP";
        };

        unshift_to_0: unshift_to_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt_off LSHIFT &to 0>;
            label = "UNSHIFT_TO_0";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC       &kp F1  &kp F2    &kp F3    &kp F4    &kp F5                  &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11
&kp EQUAL     &kp N1  &kp N2    &kp N3    &kp N4    &kp N5                  &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB       &kp Q   &kp W     &kp E     &kp R     &kp T                   &kp Y      &kp U     &kp I      &kp O     &kp P     &kp BSLH
&sk LCTRL     &kp A   &kp S     &kp D     &kp F     &kp G                   &kp H      &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&shift_dance  &kp Z   &kp X     &kp C     &kp V     &kp B                   &kp N      &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&trans        &trans  &kp LGUI  &kp LALT  &trans                                       &trans    &kp LBKT   &kp RBKT  &trans    &trans
                                          &kp RET   &mo_tog 2 2  &kp ESC    &sk K_APP  &kp BSPC  &kp SPACE
                                          &kp LGUI  &mo 1        &mo 4      &kp GRAVE  &mo 4     &mo 1
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans      &trans                 &trans     &trans           &trans           &trans           &trans    &trans
&trans  &kp EXCL  &kp AT    &kp HASH   &kp DOLLAR  &kp PERCENT            &kp CARET  &kp AMPS         &kp STAR         &kp LPAR         &kp RPAR  &kp MINUS
&trans  &trans    &kp UP    &kp N8     &kp N9      &trans                 &trans     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS  &trans
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp N6      &trans                 &trans     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp RET   &trans
&trans  &trans    &kp N1    &kp N2     &kp N3      &trans                 &trans     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans    &trans
&trans  &trans    &trans    &kp N0     &trans                                        &trans           &kp KP_NUMBER_0  &kp DOT          &trans    &trans
                                       &trans      &trans       &to 0     &trans     &trans           &trans
                                       &trans      &trans       &trans    &trans     &trans           &trans
            >;
        };

        nav_editing {
            bindings = <
&trans          &trans             &trans         &trans              &trans     &trans                         &trans    &trans             &trans           &trans     &trans    &trans
&trans          &trans             &trans         &trans              &kp END    &kp LC(A)                      &kp HOME  &trans             &trans           &trans     &kp HOME  &select_line_down
&trans          &select_word_left  &kp LC(RIGHT)  &select_word_right  &trans     &kp PG_UP                      &trans    &select_line_down  &select_line_up  &trans     &trans    &trans
&trans          &kp HOME           &kp LC(HOME)   &kp LC(END)         &kp END    &kp PG_DN                      &kp LEFT  &kp DOWN           &kp UP           &kp RIGHT  &trans    &trans
&kt LEFT_SHIFT  &kp LC(Z)          &kp LC(X)      &kp LC(C)           &kp LC(V)  &kp LC(LEFT)                   &trans    &trans             &trans           &trans     &trans    &trans
&trans          &trans             &trans         &trans              &trans                                              &trans             &trans           &trans     &trans    &trans
                                                                      &trans     &kp DEL       &unshift_to_0    &trans    &trans             &trans
                                                                      &trans     &trans        &trans           &trans    &trans             &trans
            >;
        };

        nav_selecting {
            bindings = <
&trans  &trans            &trans  &trans             &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans  &trans             &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(LC(LEFT))  &trans  &kp LS(LC(RIGHT))  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans  &trans             &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans  &trans             &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans  &trans             &trans                            &trans  &trans  &trans  &trans  &trans
                                                     &trans  &trans  &trans    &trans  &trans  &trans
                                                     &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                  &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 6        &trans        &trans        &trans        &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &to 6
&to 6        &trans        &trans        &trans        &trans                                                 &trans           &trans           &trans           &trans           &to 6
                                                       &trans        &trans        &trans    &trans           &trans           &trans
                                                       &trans        &trans        &trans    &trans           &trans           &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(A)  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans                               &trans  &trans  &trans  &trans  &trans
                                         &trans     &trans  &to 0     &trans  &trans  &trans
                                         &trans     &trans  &trans    &trans  &trans  &trans
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };
    };
};

// right hand trackball configuration
&trackball_peripheral_listener {
    input-processors =
     //activate layer 3 within 500ms of the trackball moving
     <&zip_temp_layer 3 500>;
};

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,,,,,,,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        "",
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
